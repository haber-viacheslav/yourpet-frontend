{"version":3,"file":"static/js/661.de6f6863.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","helpers/notification.js","components/LoginForm/Icons/Icons.styled.jsx","components/LoginForm/Icons/Icons.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","pages/Pages.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding-top: ${props => props.padTopSm || '40px'};\n  padding-bottom: ${props => props.padBottomSM || '100px'};\n  @media screen and (${props => props.theme.media.mdToLg}) {\n    padding-top: ${props => props.padTopMd || '80px'};\n    padding-bottom: ${props => props.padBottomMd || '192px'};\n  }\n  @media screen and (${props => props.theme.media.lg}) {\n    padding-top: ${props => props.padTopLg || '80px'};\n    padding-bottom: ${props => props.padBottomLg || '103px'};\n  }\n`;\n","import { StyledSection } from './Section.styled';\n\nexport const Section = props => {\n  return <StyledSection {...props} />;\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// import, set type ('error', 'warning', 'success', 'info')\n// and text: notify('success', 'You have successfully logged in');\n\nexport const notify = (type, text) => {\n  const toastConfig = {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  };\n  switch (type) {\n    case 'error':\n      toast.error(text, toastConfig);\n      break;\n    case 'warning':\n      toast.warn(text, toastConfig);\n      break;\n    case 'success':\n      toast.success(text, toastConfig);\n      break;\n    case 'info':\n      toast.info(text, toastConfig);\n      break;\n    default:\n      toast(text, toastConfig);\n  }\n};\n","import styled from 'styled-components';\n\nexport const SVG = styled.svg`\n  display: block;\n  fill: transparent;\n  stroke: currentColor;\n`;","import { SVG } from './Icons.styled';\nimport icons from 'images/icons.svg';\n\nexport const iconClose = () => {\n  return (\n    <SVG width={24} height={24}>\n      <use href={icons + '#icon-eye-closed'}></use>\n    </SVG>\n  );\n};\n\nexport const iconOpen = () => {\n  return (\n    <SVG width={24} height={24}>\n      <use href={icons + '#icon-eye-open'}></use>\n    </SVG>\n  );\n};\n\nexport const IconCrossSmall = () => {\n  return (\n    <SVG width={24} height={24}>\n      <use href={icons + '#icon-cross-small'}></use>\n    </SVG>\n  );\n};\n\nexport const IconCheck = () => {\n  return (\n    <SVG width={24} height={24}>\n      <use href={icons + '#icon-check'} color=\"#00C3AD\"></use>\n    </SVG>\n  );\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { Form, Field } from 'formik';\n\nexport const Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: 280px;\n  box-shadow: ${props => props.theme.shadows.mainShadow};\n  border-radius: 40px;\n  background-color: ${props => props.theme.colors.clearWhite};\n  padding: 40px 12px;\n\n  @media screen and (${props => props.theme.media.md}) {\n    width: 608px;\n    padding: 60px 75px;\n  }\n`;\n\nexport const LoginFormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Box = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 24px;\n  width: 100%;\n  margin-top: 40px;\n  margin-bottom: 80px;\n\n  @media screen and (${props => props.theme.media.md}) {\n    gap: 32px;\n    margin-bottom: 60px;\n  }\n  @media screen and (${props => props.theme.media.lg}) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.medium};\n  font-size: ${props => props.theme.fontSizes[5]};\n  line-height: 1.37;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: ${props => props.theme.colors.dark};\n\n @media screen and (${props => props.theme.media.md}) {\n    font-weight: ${props => props.theme.fontWeights.medium};\n    font-size: ${props => props.theme.fontSizes[14]};\n    line-height: 1.37;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  height: 48px;\n  font-size: ${props => props.theme.fontSizes[2]};\n  padding: 12px 16px;\n  width: 100%;\n  border: 1px solid;\n     border-color: ${props =>\n    props.error\n      ? props.theme.colors.red\n      : props.valid\n      ? props.theme.colors.green\n      : props.theme.colors.blue};\n  border-radius: 40px;\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: ${props => props.theme.fontSizes[2]};\n  width: 100%;\n  border: none;\n  border-radius: 40px;\n  height: 48px;\n  cursor: pointer;\n  background: ${props => props.theme.colors.blue};\n  margin-bottom: 24px;\n  color: ${props => props.theme.colors.clearWhite};\n\n  @media screen and (${props => props.theme.media.md}) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0.04em;\n  color: ${props => props.theme.colors.grey};\n`;\n\nexport const Span = styled.span`\n  margin-left: 3px;\n`;\nexport const Link = styled(NavLink)`\n  color: ${props => props.theme.colors.blue};\n  line-height: 1.33;\n`;\n\n\nexport const IconMail = styled.span`\n  position: absolute;\n  cursor: pointer;\n  color: ${props =>\n    props.error ? props.theme.colors.red : props.theme.colors.green};\n  top: 13px;\n  right: 40px;\n  @media screen and (${props => props.theme.media.md}) {\n    top: 86px;\n    top: 12px;\n  }\n`;\n\nexport const IconPass = styled.span`\n  color: ${props => props.theme.colors.blue};\n  position: absolute;\n  cursor: pointer;\n  top: 86px;\n  right: ${props => props.position || '15px'};\n  @media screen and (${props => props.theme.media.md}) {\n    top: 92px;\n  }\n`;\n\nexport const EmailMessage = styled.div`\n position: absolute;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 16px;\n color: ${props => props.theme.colors.red};\n  top: 50px;\n  left: 16px;\n`;\n\nexport const PasswordMessage = styled.div`\n position: absolute;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 16px;\n color: ${props => props.theme.colors.red};\n   top: 123px;\n  left: 16px;\n @media screen and (min-width: 768px) {\n    top: 130px;\n  left: 16px;\n  }\n\n`;\n\nexport const SuccessMessage = styled.p`\n  position: absolute;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 16px;\n color: ${props => props.theme.colors.green};\n   top: 123px;\n  left: 16px;\n @media screen and (min-width: 768px) {\n    top: 130px;\n  left: 16px;\n  }\n`","import React from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { string, object } from 'yup';\nimport { notify } from '../../helpers/notification';\n\nimport { iconClose, iconOpen, IconCrossSmall, IconCheck } from './Icons/Icons';\nimport {\n  Wrapper,\n  Input,\n  IconMail,\n  IconPass,\n  LoginFormStyled,\n  Title,\n  Box,\n  Button,\n  Text,\n  Span,\n  Link,\n  EmailMessage,\n  PasswordMessage,\n  SuccessMessage,\n} from './LoginForm.styled';\nimport { logIn } from 'redux/auth/authService';\nimport { useDispatch } from 'react-redux';\n\nexport const LoginForm = () => {\n  const [toggleIconPass, setToggleIconPass] = useState(iconClose);\n  const [typePass, setTypePass] = useState('password');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const yupLoginValidation = object().shape({\n    email: string().email('Enter a Valid Email').required('Email is Required'),\n    password: string()\n      .required('Enter Your Password')\n      .min(6, 'Password should be minimum 6 character')\n      .max(16, 'Too long')\n      .matches(/[0-9]/, 'Password requires a number')\n      .matches(/[a-z]/, 'Password requires a lowercase letter')\n      .matches(/[A-Z]/, 'Password requires an uppercase letter'),\n  });\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const loginResult = await dispatch(logIn(values));\n    try {\n      const status = loginResult.payload.response.status;\n      if (status === 'Success') {\n        navigate('/user');\n        resetForm();\n      }\n      notify('success', 'You have successfully logged in');\n    } catch (error) {\n      notify('error', error.message);\n      console.log(error);\n    }\n  };\n\n  const togglePassInput = e => {\n    if (typePass === 'password') {\n      setTypePass('text');\n      setToggleIconPass(iconOpen);\n    } else {\n      setTypePass('password');\n      setToggleIconPass(iconClose);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={yupLoginValidation}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => (\n          <LoginFormStyled>\n            <Title>Login</Title>\n            <Box>\n              <Input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Email\"\n                valid={touched.email && !errors.email ? 'true' : undefined}\n                error={touched.email && errors.email}\n              />\n              <ErrorMessage\n                name=\"email\"\n                type=\"email\"\n                render={msg => <EmailMessage>{msg}</EmailMessage>}\n              />\n              {errors.email && touched.email && (\n                <IconMail error={errors.email && touched.email && 'false'}>\n                  <IconCrossSmall />\n                </IconMail>\n              )}\n              {touched.email && !errors.email && (\n                <IconMail error={errors.email && touched.email && 'false'}>\n                  <IconCheck />\n                </IconMail>\n              )}\n              <Input\n                type={typePass}\n                name=\"password\"\n                placeholder=\"Password\"\n                valid={\n                  touched.password && !errors.password ? 'true' : undefined\n                }\n                error={touched.password && errors.password}\n              />\n              {touched.password && errors.password && (\n                <ErrorMessage\n                  name=\"password\"\n                  type=\"password\"\n                  render={password => (\n                    <PasswordMessage>{password}</PasswordMessage>\n                  )}\n                />\n              )}{' '}\n              {touched.password && !errors.password && (\n                <SuccessMessage>Password is secure</SuccessMessage>\n              )}\n              {touched.password && !errors.password && (\n                <IconPass\n                  position={'40px'}\n                  error={errors.password && touched.password && 'false'}\n                >\n                  <IconCheck />\n                </IconPass>\n              )}\n              <IconPass onClick={togglePassInput}>{toggleIconPass}</IconPass>\n            </Box>\n            <Button type=\"submit\">Login</Button>\n            <Text>\n              Don't have an account?\n              <Span>\n                <Link to=\"/register\">Register</Link>\n              </Span>\n            </Text>\n          </LoginFormStyled>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n","import {LoginForm} from '../components/LoginForm/LoginForm'\nimport { Section } from 'components/Section/Section';\nimport { BgWrapper } from './Pages.styled';\n\nconst LoginPage = () => {\n  return (\n    <BgWrapper>\n      <Section\n      padTopSm={'44px'}>\n      <LoginForm/>\n    </Section>\n    </BgWrapper>\n  );\n};\n\nexport default LoginPage;\n","import styled from 'styled-components';\nimport { theme } from '../theme/theme';\n\nimport bg_sm_1x from '../images/bg/bg-sm@1x.png';\nimport bg_sm_2x from '../images/bg/bg-sm@2x.png';\nimport bg_md_1x from '../images/bg/bg-md@1x.png';\nimport bg_md_2x from '../images/bg/bg-md@2x.png';\nimport bg_lg_1x from '../images/bg/bg-lg@1x.png';\nimport bg_lg_2x from '../images/bg/bg-lg@2x.png';\n\nexport const BgWrapper = styled.div`\n  height: 100%;\n  margin-left: auto;\n  margin-right: auto;\n\n  background-repeat: no-repeat;\n  background-position: center -70px;\n  background-size: 100%;\n\n  background-image: url(${bg_sm_1x});\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bg_sm_2x});\n  }\n\n  @media screen and (${theme.media.md}) {\n    background-size: 100%;\n    background-position: center -100px;\n    background-image: url(${bg_md_1x});\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${bg_md_2x});\n    }\n  }\n\n  @media screen and (${theme.media.lg}) {\n    background-image: url(${bg_lg_1x});\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${bg_lg_2x});\n    }\n  }\n`;\n\nexport const UserWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 40px;\n\n  @media screen and (${theme.media.md}) {\n  }\n\n  @media screen and (${theme.media.lg}) {\n    flex-direction: row;\n    align-items: flex-start;\n    gap: 32px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n"],"names":["StyledSection","styled","_templateObject","_taggedTemplateLiteral","props","padTopSm","padBottomSM","theme","media","mdToLg","padTopMd","padBottomMd","lg","padTopLg","padBottomLg","Section","_jsx","_objectSpread","notify","type","text","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","toast","SVG","iconClose","width","height","children","href","icons","iconOpen","IconCrossSmall","IconCheck","color","Wrapper","shadows","mainShadow","colors","clearWhite","md","LoginFormStyled","Form","_templateObject2","Box","_templateObject3","Title","_templateObject4","fonts","main","fontWeights","medium","fontSizes","dark","Input","Field","_templateObject5","regular","error","red","valid","green","blue","Button","_templateObject6","Text","_templateObject7","grey","Span","_templateObject8","Link","NavLink","_templateObject9","IconMail","_templateObject10","IconPass","_templateObject11","EmailMessage","_templateObject12","PasswordMessage","_templateObject13","SuccessMessage","_templateObject14","LoginForm","_useState","useState","_useState2","_slicedToArray","toggleIconPass","setToggleIconPass","_useState3","_useState4","typePass","setTypePass","navigate","useNavigate","dispatch","useDispatch","yupLoginValidation","object","shape","email","string","required","password","min","max","matches","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","values","_ref","resetForm","loginResult","_context","prev","next","logIn","sent","payload","response","status","message","console","log","stop","_x","_x2","apply","arguments","togglePassInput","e","Formik","initialValues","validationSchema","onSubmit","_ref3","errors","touched","_jsxs","name","placeholder","ErrorMessage","render","msg","onClick","to","BgWrapper","bg_sm_1x","bg_sm_2x","bg_md_1x","bg_md_2x","bg_lg_1x","bg_lg_2x","UserWrapper"],"sourceRoot":""}