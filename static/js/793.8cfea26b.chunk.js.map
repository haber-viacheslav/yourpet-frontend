{"version":3,"file":"static/js/793.8cfea26b.chunk.js","mappings":"qTAEaA,EAAMC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4E,mBCChBC,EAAY,WACvB,OACEC,EAAAA,EAAAA,KAACL,EAAG,CAACM,MAAO,GAAIC,OAAQ,GAAGC,UACzBH,EAAAA,EAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAQ,sBAGzB,EAEaC,EAAW,WACtB,OACEN,EAAAA,EAAAA,KAACL,EAAG,CAACM,MAAO,GAAIC,OAAQ,GAAGC,UACzBH,EAAAA,EAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAQ,oBAGzB,EAEaE,EAAiB,WAC5B,OACEP,EAAAA,EAAAA,KAACL,EAAG,CAACM,MAAO,GAAIC,OAAQ,GAAGC,UACzBH,EAAAA,EAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAQ,uBAGzB,EAEaG,EAAY,WACvB,OACER,EAAAA,EAAAA,KAACL,EAAG,CAACM,MAAO,GAAIC,OAAQ,GAAGC,UACzBH,EAAAA,EAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAQ,cAAeI,MAAM,aAG9C,E,oBC5BaC,EAAUd,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0QAKjB,SAAAa,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,UAAU,IAEjC,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,UAAU,IAGrC,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAMvCC,GAAkBvB,EAAAA,EAAAA,IAAOwB,EAAAA,GAAPxB,CAAYyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,2GAO9BwB,EAAM1B,EAAAA,GAAAA,IAAU2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,uVAWN,SAAAa,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAI7B,SAAAP,GAAK,OAAIA,EAAMC,MAAMK,MAAMO,EAAE,IAKvCC,EAAQ7B,EAAAA,GAAAA,GAAS8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,2SACb,SAAAa,GAAK,OAAIA,EAAMC,MAAMe,MAAMC,IAAI,IAE/B,SAAAjB,GAAK,OAAIA,EAAMC,MAAMiB,YAAYC,MAAM,IACzC,SAAAnB,GAAK,OAAIA,EAAMC,MAAMmB,UAAU,EAAE,IAKrC,SAAApB,GAAK,OAAIA,EAAMC,MAAMG,OAAOiB,IAAI,IAErB,SAAArB,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAChC,SAAAP,GAAK,OAAIA,EAAMC,MAAMiB,YAAYC,MAAM,IACzC,SAAAnB,GAAK,OAAIA,EAAMC,MAAMmB,UAAU,GAAG,IAKtCE,GAAQrC,EAAAA,EAAAA,IAAOsC,EAAAA,GAAPtC,CAAauC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,mUAIjB,SAAAa,GAAK,OAAIA,EAAMC,MAAMe,MAAMC,IAAI,IAE/B,SAAAjB,GAAK,OAAIA,EAAMC,MAAMiB,YAAYO,OAAO,IAE1C,SAAAzB,GAAK,OAAIA,EAAMC,MAAMmB,UAAU,EAAE,IAI3B,SAAApB,GAAK,OACtBA,EAAM0B,MACF1B,EAAMC,MAAMG,OAAOuB,IACnB3B,EAAM4B,MACN5B,EAAMC,MAAMG,OAAOyB,MACnB7B,EAAMC,MAAMG,OAAO0B,IAAI,IAMlBC,EAAS9C,EAAAA,GAAAA,OAAa+C,IAAAA,GAAA7C,EAAAA,EAAAA,GAAA,qXAIlB,SAAAa,GAAK,OAAIA,EAAMC,MAAMe,MAAMC,IAAI,IAE/B,SAAAjB,GAAK,OAAIA,EAAMC,MAAMiB,YAAYO,OAAO,IAC1C,SAAAzB,GAAK,OAAIA,EAAMC,MAAMmB,UAAU,EAAE,IAMhC,SAAApB,GAAK,OAAIA,EAAMC,MAAMG,OAAO0B,IAAI,IAErC,SAAA9B,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,UAAU,IAE1B,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAKvC0B,EAAOhD,EAAAA,GAAAA,EAAQiD,IAAAA,GAAA/C,EAAAA,EAAAA,GAAA,8JACXc,EAAAA,EAAAA,MAAAA,KAEAA,EAAAA,EAAAA,YAAAA,SAIN,SAAAD,GAAK,OAAIA,EAAMC,MAAMG,OAAO+B,IAAI,IAG9BC,EAAOnD,EAAAA,GAAAA,KAAWoD,IAAAA,GAAAlD,EAAAA,EAAAA,GAAA,+BAGlBmD,GAAOrD,EAAAA,EAAAA,IAAOsD,EAAAA,GAAPtD,CAAeuD,IAAAA,GAAArD,EAAAA,EAAAA,GAAA,+CACxB,SAAAa,GAAK,OAAIA,EAAMC,MAAMG,OAAO0B,IAAI,IAK9BW,EAAWxD,EAAAA,GAAAA,KAAWyD,IAAAA,GAAAvD,EAAAA,EAAAA,GAAA,oJAGxB,SAAAa,GAAK,OACZA,EAAM0B,MAAQ1B,EAAMC,MAAMG,OAAOuB,IAAM3B,EAAMC,MAAMG,OAAOyB,KAAK,IAG5C,SAAA7B,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAKvCoC,EAAW1D,EAAAA,GAAAA,KAAW2D,IAAAA,GAAAzD,EAAAA,EAAAA,GAAA,mJACxB,SAAAa,GAAK,OAAIA,EAAMC,MAAMG,OAAO0B,IAAI,IAIhC,SAAA9B,GAAK,OAAIA,EAAM6C,UAAY,MAAM,IACrB,SAAA7C,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAKvCuC,EAAe7D,EAAAA,GAAAA,IAAU8D,IAAAA,GAAA5D,EAAAA,EAAAA,GAAA,sLAErB,SAAAa,GAAK,OAAIA,EAAMC,MAAMe,MAAMC,IAAI,IAE/B,SAAAjB,GAAK,OAAIA,EAAMC,MAAMiB,YAAYO,OAAO,IAG/C,SAAAzB,GAAK,OAAIA,EAAMC,MAAMG,OAAOuB,GAAG,IAK5BqB,EAAkB/D,EAAAA,GAAAA,IAAUgE,IAAAA,GAAA9D,EAAAA,EAAAA,GAAA,wQAExB,SAAAa,GAAK,OAAIA,EAAMC,MAAMe,MAAMC,IAAI,IAE/B,SAAAjB,GAAK,OAAIA,EAAMC,MAAMiB,YAAYO,OAAO,IAG/C,SAAAzB,GAAK,OAAIA,EAAMC,MAAMG,OAAOuB,GAAG,IAU5BuB,EAAiBjE,EAAAA,GAAAA,EAAQkE,IAAAA,GAAAhE,EAAAA,EAAAA,GAAA,uQAErB,SAAAa,GAAK,OAAIA,EAAMC,MAAMe,MAAMC,IAAI,IAE/B,SAAAjB,GAAK,OAAIA,EAAMC,MAAMiB,YAAYO,OAAO,IAG/C,SAAAzB,GAAK,OAAIA,EAAMC,MAAMG,OAAOyB,KAAK,IC7L9BuB,EAA2B,SAAHC,GAAqC,IAA/B3B,EAAK2B,EAAL3B,MAAO4B,EAAQD,EAARC,SAAUC,EAAMF,EAANE,OAC1D,OAC+B,MAA7B7B,EAAM8B,SAASC,KAAKC,MACpBhC,EAAM8B,SAASC,KAAKE,QAAQC,cAAcC,SAAS,YAEnDC,QAAQC,IAAIT,EAAUC,GACtBD,EAASC,KACF,WAEF,OACT,ECeaS,EAAY,WACvB,IAAAC,GAA4CC,EAAAA,EAAAA,UAAS9E,GAAU+E,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAAgCL,EAAAA,EAAAA,UAAS,YAAWM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBlB,GAAWqB,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,YAERC,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACC,IAEsB,IAAIC,SAAQ,SAACC,EAASC,GACxCA,GACF,GACAC,EAIF,CAAE,MAAO7D,GAODsD,EAAS5B,EAAyB,CACtC1B,MAAO,CAEL8B,SAAU,CAAEC,KAAM,CAAEC,KAAM,IAAKC,QAAS,aAE1CL,SAAAA,EACAC,OAAQiC,EAAAA,KAEV1B,QAAQC,IAAIiB,EAEd,CAAC,wBAAAC,EAAAQ,OAAA,GAAAV,EAAA,IA3BHF,EA+BF,GAAG,CAACvB,IACJ,IAAMoC,GAAqBC,EAAAA,EAAAA,UAASC,MAAM,CACxCC,OAAOC,EAAAA,EAAAA,UAASD,MAAM,uBAAuBE,SAAS,qBACtDC,UAAUF,EAAAA,EAAAA,UACPC,SAAS,uBACTE,IAAI,EAAG,0CACPC,IAAI,GAAI,YACRC,QACC,gDACA,uHAeAC,EAAkB,SAAAC,GACL,aAAb5B,GACFC,EAAY,QACZJ,EAAkB3E,KAElB+E,EAAY,YACZJ,EAAkBlF,GAEtB,EAEA,OACEC,EAAAA,EAAAA,KAACU,EAAO,CAAAP,UACNH,EAAAA,EAAAA,KAACiH,EAAAA,GAAM,CACLC,cAxBgB,CACpBV,MAAO,GACPG,SAAU,IAuBNQ,iBAAkBd,EAClBe,SArBe,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC9B9C,QAAQC,IAAI2C,GACZpD,GAASuD,EAAAA,EAAAA,IAAM,CAAEH,OAAAA,KACjBE,GACF,EAiB6BpH,SAEtB,SAAAsH,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAAO,OACjBC,EAAAA,EAAAA,MAACzG,EAAe,CAAAhB,SAAA,EACdH,EAAAA,EAAAA,KAACyB,EAAK,CAAAtB,SAAC,WACPyH,EAAAA,EAAAA,MAACtG,EAAG,CAAAnB,SAAA,EACFH,EAAAA,EAAAA,KAACiC,EAAK,CACJ4F,KAAK,OACLC,KAAK,QACLC,YAAY,QACZxF,MAAOoF,EAAQnB,QAAUkB,EAAOlB,MAAQ,YAASwB,EACjD3F,MAAOsF,EAAQnB,OAASkB,EAAOlB,SAEjCxG,EAAAA,EAAAA,KAACiI,EAAAA,GAAY,CACXH,KAAK,QACLD,KAAK,QACLK,OAAQ,SAAAC,GAAG,OAAInI,EAAAA,EAAAA,KAACyD,EAAY,CAAAtD,SAAEgI,GAAmB,IAElDT,EAAOlB,OAASmB,EAAQnB,QACvBxG,EAAAA,EAAAA,KAACoD,EAAQ,CAACf,MAAOqF,EAAOlB,OAASmB,EAAQnB,OAAS,QAAQrG,UACxDH,EAAAA,EAAAA,KAACO,EAAc,MAGlBoH,EAAQnB,QAAUkB,EAAOlB,QACxBxG,EAAAA,EAAAA,KAACoD,EAAQ,CAACf,MAAOqF,EAAOlB,OAASmB,EAAQnB,OAAS,QAAQrG,UACxDH,EAAAA,EAAAA,KAACQ,EAAS,OAIdR,EAAAA,EAAAA,KAACiC,EAAK,CACJ4F,KAAMzC,EACN0C,KAAK,WACLC,YAAY,WACZxF,MACEoF,EAAQhB,WAAae,EAAOf,SAAW,YAASqB,EAElD3F,MAAOsF,EAAQhB,UAAYe,EAAOf,WAEnCgB,EAAQhB,UAAYe,EAAOf,WAC1B3G,EAAAA,EAAAA,KAACiI,EAAAA,GAAY,CACXH,KAAK,WACLD,KAAK,WACLK,OAAQ,SAAAvB,GAAQ,OACd3G,EAAAA,EAAAA,KAAC2D,EAAe,CAAAxD,SAAEwG,GAA2B,IAGhD,IACFgB,EAAQhB,WAAae,EAAOf,WAC3B3G,EAAAA,EAAAA,KAAC6D,EAAc,CAAA1D,SAAC,uBAEjBwH,EAAQhB,WAAae,EAAOf,WAC3B3G,EAAAA,EAAAA,KAACsD,EAAQ,CAACE,SAAU,OAClBnB,MAAOqF,EAAOf,UAAYgB,EAAQhB,UAAY,QAAQxG,UAEtDH,EAAAA,EAAAA,KAACQ,EAAS,OAGdR,EAAAA,EAAAA,KAACsD,EAAQ,CAAE8E,QAASrB,EAAgB5G,SACjC6E,QAGLhF,EAAAA,EAAAA,KAAC0C,EAAM,CAACmF,KAAK,SAAQ1H,SAAC,WACtByH,EAAAA,EAAAA,MAAChF,EAAI,CAAAzC,SAAA,CAAC,0BAEJH,EAAAA,EAAAA,KAAC+C,EAAI,CAAA5C,UACHH,EAAAA,EAAAA,KAACiD,EAAI,CAACoF,GAAG,YAAWlI,SAAC,oBAGT,KAK5B,ECvKA,GARkB,WAChB,OACEH,EAAAA,EAAAA,KAAAsI,EAAAA,SAAA,CAAAnI,UACEH,EAAAA,EAAAA,KAAC2E,EAAS,KAGhB,C","sources":["components/LoginForm/Icons/Icons.styled.jsx","components/LoginForm/Icons/Icons.jsx","components/LoginForm/LoginForm.styled.jsx","helpers/refreshingTokensExecutor.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SVG = styled.svg`\n  display: block;\n  fill: transparent;\n  stroke: currentColor;\n`;","import { SVG } from './Icons.styled';\nimport icons from 'images/icons.svg';\n\nexport const iconClose = () => {\n  return (\n    <SVG width={24} height={24}>\n      <use href={icons + '#icon-eye-closed'}></use>\n    </SVG>\n  );\n};\n\nexport const iconOpen = () => {\n  return (\n    <SVG width={24} height={24}>\n      <use href={icons + '#icon-eye-open'}></use>\n    </SVG>\n  );\n};\n\nexport const IconCrossSmall = () => {\n  return (\n    <SVG width={24} height={24}>\n      <use href={icons + '#icon-cross-small'}></use>\n    </SVG>\n  );\n};\n\nexport const IconCheck = () => {\n  return (\n    <SVG width={24} height={24}>\n      <use href={icons + '#icon-check'} color=\"#00C3AD\"></use>\n    </SVG>\n  );\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { theme } from '../../theme/theme';\nimport { Form, Field } from 'formik';\n\nexport const Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 80px;\n  width: 280px;\n  box-shadow: ${props => props.theme.shadows.mainShadow};\n  border-radius: 40px;\n  background-color: ${props => props.theme.colors.clearWhite};\n  padding: 40px 12px;\n\n  @media screen and (${props => props.theme.media.md}) {\n    width: 608px;\n    padding: 60px 75px;\n  }\n`;\n\nexport const LoginFormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Box = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 24px;\n  width: 100%;\n  margin-top: 40px;\n  margin-bottom: 80px;\n\n  @media screen and (${props => props.theme.media.md}) {\n    gap: 32px;\n    margin-bottom: 60px;\n  }\n  @media screen and (${props => props.theme.media.lg}) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.medium};\n  font-size: ${props => props.theme.fontSizes[5]};\n  line-height: 1.37;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: ${props => props.theme.colors.dark};\n\n @media screen and (${props => props.theme.media.md}) {\n    font-weight: ${props => props.theme.fontWeights.medium};\n    font-size: ${props => props.theme.fontSizes[14]};\n    line-height: 1.37;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  height: 48px;\n  font-size: ${props => props.theme.fontSizes[2]};\n  padding: 12px 16px;\n  width: 100%;\n  border: 1px solid;\n     border-color: ${props =>\n    props.error\n      ? props.theme.colors.red\n      : props.valid\n      ? props.theme.colors.green\n      : props.theme.colors.blue};\n  border-radius: 40px;\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: ${props => props.theme.fontSizes[2]};\n  width: 100%;\n  border: none;\n  border-radius: 40px;\n  height: 48px;\n  cursor: pointer;\n  background: ${props => props.theme.colors.blue};\n  margin-bottom: 24px;\n  color: ${props => props.theme.colors.clearWhite};\n\n  @media screen and (${props => props.theme.media.md}) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: ${theme.fonts.main};\n  font-style: normal;\n  font-weight: ${theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0.04em;\n  color: ${props => props.theme.colors.grey};\n`;\n\nexport const Span = styled.span`\n  margin-left: 3px;\n`;\nexport const Link = styled(NavLink)`\n  color: ${props => props.theme.colors.blue};\n  line-height: 1.33;\n`;\n\n\nexport const IconMail = styled.span`\n  position: absolute;\n  cursor: pointer;\n  color: ${props =>\n    props.error ? props.theme.colors.red : props.theme.colors.green};\n  top: 86px;\n  right: 40px;\n  @media screen and (${props => props.theme.media.md}) {\n    top: 12px;\n  }\n`;\n\nexport const IconPass = styled.span`\n  color: ${props => props.theme.colors.blue};\n  position: absolute;\n  cursor: pointer;\n  top: 86px;\n  right: ${props => props.position || '15px'};\n  @media screen and (${props => props.theme.media.md}) {\n    top: 92px;\n  }\n`;\n\nexport const EmailMessage = styled.div`\n position: absolute;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 16px;\n color: ${props => props.theme.colors.red};\n  top: 50px;\n  left: 16px;\n`;\n\nexport const PasswordMessage = styled.div`\n position: absolute;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 16px;\n color: ${props => props.theme.colors.red};\n   top: 123px;\n  left: 16px;\n @media screen and (min-width: 768px) {\n    top: 130px;\n  left: 16px;\n  }\n\n`;\n\nexport const SuccessMessage = styled.p`\n  position: absolute;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 16px;\n color: ${props => props.theme.colors.green};\n   top: 123px;\n  left: 16px;\n @media screen and (min-width: 768px) {\n    top: 130px;\n  left: 16px;\n  }\n`","export const refreshingTokensExecutor = ({ error, dispatch, action }) => {\n  if (\n    error.response.data.code === 403 &&\n    error.response.data.message.toLowerCase().includes('expired')\n  ) {\n    console.log(dispatch, action);\n    dispatch(action());\n    return 'expired';\n  }\n  return 'error';\n};\n","import React, { useEffect } from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn, refreshTokens } from '../../redux/auth/authService';\nimport { string, object } from 'yup';\nimport { iconClose, iconOpen, IconCrossSmall, IconCheck } from './Icons/Icons';\nimport {\n  Wrapper,\n  Input,\n  IconMail,\n  IconPass,\n  LoginFormStyled,\n  Title,\n  Box,\n  Button,\n  Text,\n  Span,\n  Link,\n  EmailMessage,\n  PasswordMessage,\n  SuccessMessage,\n} from './LoginForm.styled';\nimport { refreshingTokensExecutor } from 'helpers/refreshingTokensExecutor';\n\nexport const LoginForm = () => {\n  const [toggleIconPass, setToggleIconPass] = useState(iconClose);\n  const [typePass, setTypePass] = useState('password');\n\n  const dispatch = useDispatch();\n  // ACHTUNG\n  // THIS useEffect is created ONLY AS AN EXAMPLE!!!!!\n  useEffect(() => {\n    // IIEF async func or named async func which doing request to some endpoints\n    (async () => {\n      try {\n        // only the catch block trigger\n        const exampleONLY = new Promise((resolve, reject) => {\n          reject();\n        });\n        exampleONLY();\n        // const resp = await  functionToRequestSomeData()\n        // other logic...\n        // if access token has expired the server send 403 error and the catch block will be triggered.\n      } catch (error) {\n        /** //refreshingTokensExecutor//\n         *  @param {error}\n         * catch error body\n         * @param { dispatch} *link to the dispatch\n         * @param { action} *an action that using in dispatch, like \"dispatch(someAction())\"\n         */\n        const result = refreshingTokensExecutor({\n          error: {\n            // This path is an EXAMPLE ONLY , send ONLY the catch error obj in the arguments of this func!!!\n            response: { data: { code: 403, message: 'expired' } },\n          },\n          dispatch,\n          action: refreshTokens,\n        });\n        console.log(result); // if error 403 result would be \"expired\" (type String) and you could do some logic if you want\n        // if error has  any codes except 403 the result would be \"error\" (type Object)!!\n      }\n    })();\n\n    // dispatch(refreshTokens());\n  }, [dispatch]);\n  const yupLoginValidation = object().shape({\n    email: string().email('Enter a Valid Email').required('Email is Required'),\n    password: string()\n      .required('Enter Your Password')\n      .min(6, 'Password should be minimum 6 character')\n      .max(16, 'Too long')\n      .matches(\n        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,16}$/,\n        'Password must contain at least one uppercase letter, one lowercase letter, one digit, and be 6-16 characters long'\n      ),\n  });\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    dispatch(logIn({ values }));\n    resetForm();\n  };\n\n  const togglePassInput = e => {\n    if (typePass === 'password') {\n      setTypePass('text');\n      setToggleIconPass(iconOpen);\n    } else {\n      setTypePass('password');\n      setToggleIconPass(iconClose);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={yupLoginValidation}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => (\n          <LoginFormStyled>\n            <Title>Login</Title>\n            <Box>\n              <Input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Email\"\n                valid={touched.email && !errors.email ? 'true' : undefined}\n                error={touched.email && errors.email}\n              />\n              <ErrorMessage\n                name=\"email\"\n                type=\"email\"\n                render={msg => <EmailMessage>{msg}</EmailMessage>}\n              />\n              {errors.email && touched.email && (\n                <IconMail error={errors.email && touched.email && 'false'}>\n                  <IconCrossSmall />\n                </IconMail>\n              )}\n              {touched.email && !errors.email && (\n                <IconMail error={errors.email && touched.email && 'false'}>\n                  <IconCheck />\n                </IconMail>\n              )}\n              \n              <Input\n                type={typePass}\n                name=\"password\"\n                placeholder=\"Password\"\n                valid={\n                  touched.password && !errors.password ? 'true' : undefined\n                }\n                error={touched.password && errors.password}\n              />\n              {touched.password && errors.password && (\n                <ErrorMessage\n                  name=\"password\"\n                  type=\"password\"\n                  render={password => (\n                    <PasswordMessage>{password}</PasswordMessage>\n                  )}\n                />\n              )}{' '}\n              {touched.password && !errors.password && (\n                <SuccessMessage>Password is secure</SuccessMessage>\n              )}\n              {touched.password && !errors.password && (\n                <IconPass position={'40px'}\n                  error={errors.password && touched.password && 'false'}\n                >\n                  <IconCheck />\n                </IconPass>\n              )}\n              <IconPass  onClick={togglePassInput}>\n                {toggleIconPass}\n              </IconPass>\n            </Box>\n            <Button type=\"submit\">Login</Button>\n            <Text>\n              Don't have an account?\n              <Span>\n                <Link to=\"/register\">Register</Link>\n              </Span>\n            </Text>\n          </LoginFormStyled>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n","import {LoginForm} from '../components/LoginForm/LoginForm'\n\nconst LoginPage = () => {\n  return (\n    <>\n      <LoginForm/>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["SVG","styled","_templateObject","_taggedTemplateLiteral","iconClose","_jsx","width","height","children","href","icons","iconOpen","IconCrossSmall","IconCheck","color","Wrapper","props","theme","shadows","mainShadow","colors","clearWhite","media","md","LoginFormStyled","Form","_templateObject2","Box","_templateObject3","lg","Title","_templateObject4","fonts","main","fontWeights","medium","fontSizes","dark","Input","Field","_templateObject5","regular","error","red","valid","green","blue","Button","_templateObject6","Text","_templateObject7","grey","Span","_templateObject8","Link","NavLink","_templateObject9","IconMail","_templateObject10","IconPass","_templateObject11","position","EmailMessage","_templateObject12","PasswordMessage","_templateObject13","SuccessMessage","_templateObject14","refreshingTokensExecutor","_ref","dispatch","action","response","data","code","message","toLowerCase","includes","console","log","LoginForm","_useState","useState","_useState2","_slicedToArray","toggleIconPass","setToggleIconPass","_useState3","_useState4","typePass","setTypePass","useDispatch","useEffect","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","Promise","resolve","reject","exampleONLY","refreshTokens","stop","yupLoginValidation","object","shape","email","string","required","password","min","max","matches","togglePassInput","e","Formik","initialValues","validationSchema","onSubmit","values","_ref2","resetForm","logIn","_ref3","errors","touched","_jsxs","type","name","placeholder","undefined","ErrorMessage","render","msg","onClick","to","_Fragment"],"sourceRoot":""}