{"version":3,"file":"static/js/698.80f78569.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { theme } from '../../theme/theme';\nimport { Form, Field } from 'formik';\n\nexport const Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 80px;\n  width: 280px;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n  background-color: #ffffff;\n  padding: 40px 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    padding: 60px 75px;\n  }\n`;\n\nexport const LoginFormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Box = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 24px;\n  width: 100%;\n  margin-top: 40px;\n  margin-bottom: 80px;\n\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n    margin-bottom: 60px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: ${theme.fonts.main};\n  font-style: normal;\n  font-weight: ${theme.fontWeights.medium};\n  font-size: 24px;\n  line-height: 33px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: #111111;\n\n  @media screen and (min-width: 768px) {\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 49px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  font-family: ${theme.fonts.main};\n  font-style: normal;\n  font-weight: ${theme.fontWeights.regular};\n  height: 48px;\n  font-size: 16px;\n  padding: 12px 16px;\n  width: 100%;\n  border: 1px solid #54adff;\n  border-radius: 40px;\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  width: 100%;\n  border: none;\n  border-radius: 40px;\n  height: 48px;\n  cursor: pointer;\n  background: #54adff;\n  margin-bottom: 24px;\n  color: #ffffff;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: ${theme.fonts.main};\n  font-style: normal;\n  font-weight: ${theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0.04em;\n  color: #888888;\n`;\n\nexport const Span = styled.span`\n  margin-left: 3px;\n`;\nexport const Link = styled(NavLink)`\n  color: #54adff;\n  line-height: 16px;\n`;\n\nexport const IconSpan = styled.span`\n  position: absolute;\n  cursor: pointer;\n  top: 86px;\n  right: 15px;\n  @media screen and (min-width: 768px) {\n     top: 92px;\n  }\n`;\n\nexport const SVG = styled.svg`\ndisplay:block;\n  fill: transparent;\n  stroke: #54adff;\n`;\n\nexport const EmailMessage = styled.div`\n position: absolute;\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n color: #F43F5E;\n  top: 50px;\n  left: 16px;\n`;\n\nexport const PasswordMessage = styled.div`\n position: absolute;\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n color: #F43F5E;\n   top: 123px;\n  left: 16px;\n @media screen and (min-width: 768px) {\n    top: 130px;\n  left: 16px;\n  }\n\n`;","import React from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport { useState } from 'react';\nimport { string, object } from 'yup';\nimport {\n  Wrapper,\n  Input,\n  LoginFormStyled,\n  Title,\n  Box,\n  Button,\n  Text,\n  Span,\n  Link,\n  IconSpan,\n  SVG,\n  EmailMessage,\n  PasswordMessage,\n} from './LoginForm.styled';\nimport icons from 'images/icons.svg';\n\nexport const LoginForm = () => {\n  const [toggleIconPass, setToggleIconPass] = useState(\n    <SVG width={24} height={24}>\n      <use href={icons + '#icon-eye-closed'}></use>\n    </SVG>\n  );\n  const [typePass, setTypePass] = useState('password');\n\n  const yupLoginValidation = object().shape({\n    email: string().email('Enter a Valid Email').required('Email is Required'),\n    password: string()\n      .required('Enter Your Password')\n      .min(8, 'Password Should be minimum 8 character')\n      .max(50, 'Too long'),\n  });\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    // console.log(actions);\n    resetForm();\n  };\n\n  const togglePassInput = e => {\n    if (typePass === 'password') {\n      setTypePass('text');\n      setToggleIconPass(\n        <SVG width={24} height={24}>\n          <use href={icons + '#icon-eye-open'}></use>\n        </SVG>\n      );\n    } else {\n      setTypePass('password');\n      setToggleIconPass(\n        <SVG width={24} height={24}>\n          <use href={icons + '#icon-eye-closed'}></use>\n        </SVG>\n      );\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={yupLoginValidation}\n        onSubmit={handleSubmit}\n      >\n        <LoginFormStyled>\n          <Title>Login</Title>\n          <Box>\n            <Input type=\"text\" name=\"email\" placeholder=\"Email\" />\n            <ErrorMessage\n              name=\"email\"\n              type=\"email\"\n              render={msg => <EmailMessage>{msg}</EmailMessage>}\n            />\n            <Input type={typePass} name=\"password\" placeholder=\"Password\" />\n            <ErrorMessage\n              name=\"password\"\n              type=\"password\"\n              render={password => <PasswordMessage>{password}</PasswordMessage>}\n            />\n            <IconSpan onClick={togglePassInput}>{toggleIconPass}</IconSpan>\n          </Box>\n          <Button type=\"submit\">Login</Button>\n          <Text>\n            Don't have an account?\n            <Span>\n              <Link to=\"/register\">Register</Link>\n            </Span>\n          </Text>\n        </LoginFormStyled>\n      </Formik>\n    </Wrapper>\n  );\n};\n","import {LoginForm} from '../components/LoginForm/LoginForm'\n\nconst LoginPage = () => {\n  return (\n    <>\n      <LoginForm/>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","LoginFormStyled","Form","_templateObject2","Box","_templateObject3","Title","_templateObject4","theme","Input","Field","_templateObject5","Button","_templateObject6","Text","_templateObject7","Span","_templateObject8","Link","NavLink","_templateObject9","IconSpan","_templateObject10","SVG","_templateObject11","EmailMessage","_templateObject12","PasswordMessage","_templateObject13","LoginForm","_useState","useState","_jsx","width","height","children","href","icons","_useState2","_slicedToArray","toggleIconPass","setToggleIconPass","_useState3","_useState4","typePass","setTypePass","yupLoginValidation","object","shape","email","string","required","password","min","max","Formik","initialValues","validationSchema","onSubmit","values","_ref","resetForm","console","log","_jsxs","type","name","placeholder","ErrorMessage","render","msg","onClick","e","to","_Fragment"],"sourceRoot":""}