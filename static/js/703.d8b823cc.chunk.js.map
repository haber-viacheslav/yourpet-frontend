{"version":3,"file":"static/js/703.d8b823cc.chunk.js","mappings":"8RAEaA,EAAMC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4E,mBCChBC,EAAY,WACvB,OACEC,EAAAA,EAAAA,KAACL,EAAG,CAACM,MAAO,GAAIC,OAAQ,GAAGC,UACzBH,EAAAA,EAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAQ,sBAGzB,EAEaC,EAAW,WACtB,OACEN,EAAAA,EAAAA,KAACL,EAAG,CAACM,MAAO,GAAIC,OAAQ,GAAGC,UACzBH,EAAAA,EAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAQ,oBAGzB,EAEaE,EAAiB,WAC5B,OACEP,EAAAA,EAAAA,KAACL,EAAG,CAACM,MAAO,GAAIC,OAAQ,GAAGC,UACzBH,EAAAA,EAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAQ,uBAGzB,EAEaG,EAAY,WACvB,OACER,EAAAA,EAAAA,KAACL,EAAG,CAACM,MAAO,GAAIC,OAAQ,GAAGC,UACzBH,EAAAA,EAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAQ,cAAeI,MAAM,aAG9C,E,oBC5BaC,EAAUd,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0QAKjB,SAAAa,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,UAAU,IAEjC,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,UAAU,IAGrC,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAMvCC,GAAqBvB,EAAAA,EAAAA,IAAOwB,EAAAA,GAAPxB,CAAYyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,2GAOjCwB,EAAM1B,EAAAA,GAAAA,IAAU2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,uVAWN,SAAAa,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAI7B,SAAAP,GAAK,OAAIA,EAAMC,MAAMK,MAAMO,EAAE,IAKvCC,EAAQ7B,EAAAA,GAAAA,GAAS8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,4SACb,SAAAa,GAAK,OAAIA,EAAMC,MAAMe,MAAMC,IAAI,IAE/B,SAAAjB,GAAK,OAAIA,EAAMC,MAAMiB,YAAYC,MAAM,IACzC,SAAAnB,GAAK,OAAIA,EAAMC,MAAMmB,UAAU,EAAE,IAKrC,SAAApB,GAAK,OAAIA,EAAMC,MAAMG,OAAOiB,IAAI,IAEpB,SAAArB,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IACjC,SAAAP,GAAK,OAAIA,EAAMC,MAAMiB,YAAYC,MAAM,IACzC,SAAAnB,GAAK,OAAIA,EAAMC,MAAMmB,UAAU,GAAG,IAKtCE,GAAQrC,EAAAA,EAAAA,IAAOsC,EAAAA,GAAPtC,CAAauC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,gUAIjB,SAAAa,GAAK,OAAIA,EAAMC,MAAMe,MAAMC,IAAI,IAE/B,SAAAjB,GAAK,OAAIA,EAAMC,MAAMiB,YAAYO,OAAO,IAE1C,SAAAzB,GAAK,OAAIA,EAAMC,MAAMmB,UAAU,EAAE,IAI9B,SAAApB,GAAK,OACnBA,EAAM0B,MACF1B,EAAMC,MAAMG,OAAOuB,IACnB3B,EAAM4B,MACN5B,EAAMC,MAAMG,OAAOyB,MACnB7B,EAAMC,MAAMG,OAAO0B,IAAI,IAMlBC,EAAS9C,EAAAA,GAAAA,OAAa+C,IAAAA,GAAA7C,EAAAA,EAAAA,GAAA,qXAIlB,SAAAa,GAAK,OAAIA,EAAMC,MAAMe,MAAMC,IAAI,IAE/B,SAAAjB,GAAK,OAAIA,EAAMC,MAAMiB,YAAYO,OAAO,IAC1C,SAAAzB,GAAK,OAAIA,EAAMC,MAAMmB,UAAU,EAAE,IAMhC,SAAApB,GAAK,OAAIA,EAAMC,MAAMG,OAAO0B,IAAI,IAErC,SAAA9B,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,UAAU,IAE1B,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAKvC0B,EAAOhD,EAAAA,GAAAA,EAAQiD,IAAAA,GAAA/C,EAAAA,EAAAA,GAAA,6JACXc,EAAAA,EAAAA,MAAAA,KAEAA,EAAAA,EAAAA,YAAAA,SACF,SAAAD,GAAK,OAAIA,EAAMC,MAAMmB,UAAU,EAAE,IAGrC,SAAApB,GAAK,OAAIA,EAAMC,MAAMG,OAAO+B,IAAI,IAG9BC,EAAOnD,EAAAA,GAAAA,KAAWoD,IAAAA,GAAAlD,EAAAA,EAAAA,GAAA,+BAIlBmD,GAAOrD,EAAAA,EAAAA,IAAOsD,EAAAA,GAAPtD,CAAeuD,IAAAA,GAAArD,EAAAA,EAAAA,GAAA,+CACxB,SAAAa,GAAK,OAAIA,EAAMC,MAAMG,OAAO0B,IAAI,IAI9BW,EAAWxD,EAAAA,GAAAA,KAAWyD,IAAAA,GAAAvD,EAAAA,EAAAA,GAAA,oJAGxB,SAAAa,GAAK,OACZA,EAAM0B,MAAQ1B,EAAMC,MAAMG,OAAOuB,IAAM3B,EAAMC,MAAMG,OAAOyB,KAAK,IAG5C,SAAA7B,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAKvCoC,EAAW1D,EAAAA,GAAAA,KAAW2D,IAAAA,GAAAzD,EAAAA,EAAAA,GAAA,mJACxB,SAAAa,GAAK,OAAIA,EAAMC,MAAMG,OAAO0B,IAAI,IAIhC,SAAA9B,GAAK,OAAIA,EAAM6C,UAAY,MAAM,IACrB,SAAA7C,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAIvCuC,EAAc7D,EAAAA,GAAAA,KAAW8D,IAAAA,GAAA5D,EAAAA,EAAAA,GAAA,qJAC3B,SAAAa,GAAK,OAAIA,EAAMC,MAAMG,OAAO0B,IAAI,IAIhC,SAAA9B,GAAK,OAAIA,EAAM6C,UAAY,MAAM,IACrB,SAAA7C,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAOvCyC,EAAe/D,EAAAA,GAAAA,IAAUgE,IAAAA,GAAA9D,EAAAA,EAAAA,GAAA,wLAErB,SAAAa,GAAK,OAAIA,EAAMC,MAAMe,MAAMC,IAAI,IAE/B,SAAAjB,GAAK,OAAIA,EAAMC,MAAMiB,YAAYO,OAAO,IAG9C,SAAAzB,GAAK,OAAIA,EAAMC,MAAMG,OAAOuB,GAAG,IAK7BuB,EAAkBjE,EAAAA,GAAAA,IAAUkE,IAAAA,GAAAhE,EAAAA,EAAAA,GAAA,6PAExB,SAAAa,GAAK,OAAIA,EAAMC,MAAMe,MAAMC,IAAI,IAE/B,SAAAjB,GAAK,OAAIA,EAAMC,MAAMiB,YAAYO,OAAO,IAG9C,SAAAzB,GAAK,OAAIA,EAAMC,MAAMG,OAAOuB,GAAG,IAGnB,SAAA3B,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAMvC6C,EAAiBnE,EAAAA,GAAAA,IAAUoE,IAAAA,GAAAlE,EAAAA,EAAAA,GAAA,4OAEvB,SAAAa,GAAK,OAAIA,EAAMC,MAAMe,MAAMC,IAAI,IAE/B,SAAAjB,GAAK,OAAIA,EAAMC,MAAMiB,YAAYO,OAAO,IAG9C,SAAAzB,GAAK,OAAIA,EAAMC,MAAMG,OAAOuB,GAAG,IAGnB,SAAA3B,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAKvC+C,EAAqBrE,EAAAA,GAAAA,IAAUsE,IAAAA,GAAApE,EAAAA,EAAAA,GAAA,6PAE3B,SAAAa,GAAK,OAAIA,EAAMC,MAAMe,MAAMC,IAAI,IAE/B,SAAAjB,GAAK,OAAIA,EAAMC,MAAMiB,YAAYO,OAAO,IAG9C,SAAAzB,GAAK,OAAIA,EAAMC,MAAMG,OAAOyB,KAAK,IAGrB,SAAA7B,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IAMvCiD,GAAwBvE,EAAAA,GAAAA,IAAUwE,IAAAA,GAAAtE,EAAAA,EAAAA,GAAA,4OAE9B,SAAAa,GAAK,OAAIA,EAAMC,MAAMe,MAAMC,IAAI,IAE/B,SAAAjB,GAAK,OAAIA,EAAMC,MAAMiB,YAAYO,OAAO,IAG9C,SAAAzB,GAAK,OAAIA,EAAMC,MAAMG,OAAOyB,KAAK,IAGrB,SAAA7B,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAE,IC/MvCmD,GAAe,WAC1B,IAAAC,GAA4CC,EAAAA,EAAAA,UAASxE,GAAUyE,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAAgCL,EAAAA,EAAAA,UAAS,YAAWM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAkDT,EAAAA,EAAAA,UAASxE,GAAUkF,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA9DE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAC9CG,GAAoCb,EAAAA,EAAAA,UAAS,YAAWc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAjDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,GAAWC,EAAAA,EAAAA,MAEXC,GAAwBC,EAAAA,EAAAA,UAASC,MAAM,CAC3CC,OAAOC,EAAAA,EAAAA,UAASD,MAAM,uBAAuBE,SAAS,qBACtDC,UAAUF,EAAAA,EAAAA,UACPC,SAAS,uBACTE,IAAI,EAAG,0CACPC,IAAI,GAAI,YACRC,QACC,gDACA,qHAEJC,SAASN,EAAAA,EAAAA,UACNO,MAAM,EAACC,EAAAA,EAAAA,KAAI,aAAc,6BACzBP,SAAS,kCAcRQ,EAAkB,SAAAC,GACL,aAAb1B,GACFC,EAAY,QACZJ,EAAkBrE,KAElByE,EAAY,YACZJ,EAAkB5E,GAEtB,EAEM0G,EAAqB,SAAAD,GACN,aAAflB,GACFC,EAAc,QACdJ,EAAqB7E,KAErBiF,EAAc,YACdJ,EAAqBpF,GAEzB,EAEA,OACEC,EAAAA,EAAAA,KAACU,EAAO,CAAAP,UACNH,EAAAA,EAAAA,KAAC0G,EAAAA,GAAM,CACLC,cAlCgB,CACpBd,MAAO,GACPG,SAAU,GACVI,QAAS,IAgCLQ,iBAAkBlB,EAClBmB,SA9Be,SAAHC,EAAAC,GAA4C,IAAtClB,EAAKiB,EAALjB,MAAOG,EAAQc,EAARd,SAAcgB,EAASD,EAATC,UAC3CxB,GAASyB,EAAAA,EAAAA,IAAS,CAAEpB,MAAAA,EAAOG,SAAAA,KAC3BgB,GACF,EA2B6B7G,SAEtB,SAAA+G,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAAO,OACjBC,EAAAA,EAAAA,MAAClG,EAAkB,CAACmG,aAAa,MAAKnH,SAAA,EACpCH,EAAAA,EAAAA,KAACyB,EAAK,CAAAtB,SAAC,iBACPkH,EAAAA,EAAAA,MAAC/F,EAAG,CAAAnB,SAAA,EACFH,EAAAA,EAAAA,KAACiC,EAAK,CACJsF,KAAK,OACLC,KAAK,QACLC,YAAY,QACZlF,MAAO6E,EAAQvB,QAAUsB,EAAOtB,MAAQ,YAAS6B,EACjDrF,MAAO+E,EAAQvB,OAASsB,EAAOtB,SAEjC7F,EAAAA,EAAAA,KAAC2H,EAAAA,GAAY,CACXH,KAAK,QACLD,KAAK,QACLK,GAAG,QACHC,OAAQ,SAAAC,GAAG,OAAI9H,EAAAA,EAAAA,KAAC2D,EAAY,CAAAxD,SAAE2H,GAAmB,IAElDX,EAAOtB,OAASuB,EAAQvB,QACvB7F,EAAAA,EAAAA,KAACoD,EAAQ,CAACf,MAAO8E,EAAOtB,OAASuB,EAAQvB,OAAS,QAAQ1F,UACxDH,EAAAA,EAAAA,KAACO,EAAc,MAGlB6G,EAAQvB,QAAUsB,EAAOtB,QACxB7F,EAAAA,EAAAA,KAACoD,EAAQ,CAACf,MAAO8E,EAAOtB,OAASuB,EAAQvB,OAAS,QAAQ1F,UACxDH,EAAAA,EAAAA,KAACQ,EAAS,OAGdR,EAAAA,EAAAA,KAACiC,EAAK,CACJsF,KAAMzC,EACN8C,GAAG,WACHJ,KAAK,WACLC,YAAY,WACZlF,MACE6E,EAAQpB,WAAamB,EAAOnB,SAAW,YAAS0B,EAElDrF,MAAO+E,EAAQpB,UAAYmB,EAAOnB,WAEnCoB,EAAQpB,UAAYmB,EAAOnB,WAC1BhG,EAAAA,EAAAA,KAAC2H,EAAAA,GAAY,CACXH,KAAK,WACLD,KAAK,WACLM,OAAQ,SAAA7B,GAAQ,OACdhG,EAAAA,EAAAA,KAAC6D,EAAe,CAAA1D,SAAE6F,GAA2B,IAIlDoB,EAAQpB,WAAamB,EAAOnB,WAC3BhG,EAAAA,EAAAA,KAACiE,EAAkB,CAAA9D,SAAC,uBAErBiH,EAAQpB,WAAamB,EAAOnB,WAC3BhG,EAAAA,EAAAA,KAACsD,EAAQ,CAACE,SAAU,OAClBnB,MAAO8E,EAAOnB,UAAYoB,EAAQpB,UAAY,QAAQ7F,UAEtDH,EAAAA,EAAAA,KAACQ,EAAS,OAGdR,EAAAA,EAAAA,KAACsD,EAAQ,CAAEyE,QAASxB,EAAgBpG,SACjCuE,KAGH1E,EAAAA,EAAAA,KAACiC,EAAK,CACJsF,KAAMjC,EACNkC,KAAK,UACLI,GAAG,UACHH,YAAY,mBACZlF,MAAO6E,EAAQhB,UAAYe,EAAOf,QAAU,YAASsB,EACrDrF,MAAO+E,EAAQhB,SAAWe,EAAOf,UAElCgB,EAAQhB,UAAYe,EAAOf,UAC1BpG,EAAAA,EAAAA,KAACyD,EAAW,CAACD,SAAU,OACrBnB,MAAO8E,EAAOf,SAAWgB,EAAQhB,SAAW,QAAQjG,UAEpDH,EAAAA,EAAAA,KAACQ,EAAS,OAGdR,EAAAA,EAAAA,KAACyD,EAAW,CAACsE,QAAStB,EAAmBtG,SACpC+E,IAGJkC,EAAQhB,SAAWe,EAAOf,UACzBpG,EAAAA,EAAAA,KAAC2H,EAAAA,GAAY,CACXH,KAAK,UACLD,KAAK,UACLM,OAAQ,SAAAC,GAAG,OAAI9H,EAAAA,EAAAA,KAAC+D,EAAc,CAAA5D,SAAE2H,GAAqB,IAGxDV,EAAQhB,UAAYe,EAAOf,UAC1BpG,EAAAA,EAAAA,KAACmE,GAAqB,CAAAhE,SAAC,6BAK3BH,EAAAA,EAAAA,KAAC0C,EAAM,CAAC6E,KAAK,SAAQpH,SAAC,iBACtBkH,EAAAA,EAAAA,MAACzE,EAAI,CAAAzC,SAAA,CAAC,4BAEJH,EAAAA,EAAAA,KAAC+C,EAAI,CAAA5C,UACHH,EAAAA,EAAAA,KAACiD,EAAI,CAAC+E,GAAG,SAAQ7H,SAAC,iBAGH,KAK/B,ECvLA,GAPqB,WACnB,OACEH,EAAAA,EAAAA,KAAAiI,EAAAA,SAAA,CAAA9H,UACEH,EAAAA,EAAAA,KAACqE,GAAY,KAGnB,C","sources":["components/RegisterForm/Icons/Icons.styled.jsx","components/RegisterForm/Icons/Icons.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SVG = styled.svg`\n  display: block;\n  fill: transparent;\n  stroke: currentColor;\n`;","import { SVG } from './Icons.styled';\nimport icons from 'images/icons.svg';\n\nexport const iconClose = () => {\n  return (\n    <SVG width={24} height={24}>\n      <use href={icons + '#icon-eye-closed'}></use>\n    </SVG>\n  );\n};\n\nexport const iconOpen = () => {\n  return (\n    <SVG width={24} height={24}>\n      <use href={icons + '#icon-eye-open'}></use>\n    </SVG>\n  );\n};\n\nexport const IconCrossSmall = () => {\n  return (\n    <SVG width={24} height={24}>\n      <use href={icons + '#icon-cross-small'}></use>\n    </SVG>\n  );\n};\n\nexport const IconCheck = () => {\n  return (\n    <SVG width={24} height={24}>\n      <use href={icons + '#icon-check'} color=\"#00C3AD\"></use>\n    </SVG>\n  );\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { theme } from '../../theme/theme';\nimport { Form, Field } from 'formik';\n\nexport const Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 80px;\n  width: 280px;\n  box-shadow: ${props => props.theme.shadows.mainShadow};\n  border-radius: 40px;\n  background-color: ${props => props.theme.colors.clearWhite};\n  padding: 40px 12px;\n\n  @media screen and (${props => props.theme.media.md}) {\n    width: 608px;\n    padding: 60px 75px;\n  }\n`;\n\nexport const RegisterFormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Box = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 24px;\n  width: 100%;\n  margin-top: 40px;\n  margin-bottom: 40px;\n\n  @media screen and (${props => props.theme.media.md}) {\n    gap: 32px;\n    margin-bottom: 52px;\n  }\n  @media screen and (${props => props.theme.media.lg}) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.medium};\n  font-size: ${props => props.theme.fontSizes[5]};\n  line-height: 1.37;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: ${props => props.theme.colors.dark};\n\n  @media screen and (${props => props.theme.media.md}) {\n    font-weight: ${props => props.theme.fontWeights.medium};\n    font-size: ${props => props.theme.fontSizes[14]};\n    line-height: 1.37;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  height: 48px;\n  font-size: ${props => props.theme.fontSizes[2]};\n  padding: 12px 16px;\n  width: 100%;\n  border: 1px solid;\n  border-color: ${props =>\n    props.error\n      ? props.theme.colors.red\n      : props.valid\n      ? props.theme.colors.green\n      : props.theme.colors.blue};\n  border-radius: 40px;\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: ${props => props.theme.fontSizes[2]};\n  width: 100%;\n  border: none;\n  border-radius: 40px;\n  height: 48px;\n  cursor: pointer;\n  background: ${props => props.theme.colors.blue};\n  margin-bottom: 24px;\n  color: ${props => props.theme.colors.clearWhite};\n\n  @media screen and (${props => props.theme.media.md}) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: ${theme.fonts.main};\n  font-style: normal;\n  font-weight: ${theme.fontWeights.regular};\n  font-size: ${props => props.theme.fontSizes[0]};\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n  color: ${props => props.theme.colors.grey};\n`;\n\nexport const Span = styled.span`\n  margin-left: 3px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: ${props => props.theme.colors.blue};\n  line-height: 1.33;\n`;\n\nexport const IconMail = styled.span`\n  position: absolute;\n  cursor: pointer;\n  color: ${props =>\n    props.error ? props.theme.colors.red : props.theme.colors.green};\n  top: 86px;\n  right: 40px;\n  @media screen and (${props => props.theme.media.md}) {\n    top: 12px;\n  }\n`;\n\nexport const IconPass = styled.span`\n  color: ${props => props.theme.colors.blue};\n  position: absolute;\n  cursor: pointer;\n  top: 86px;\n  right: ${props => props.position || '15px'};\n  @media screen and (${props => props.theme.media.md}) {\n    top: 92px;\n  }\n`;\nexport const IconConfirm = styled.span`\n  color: ${props => props.theme.colors.blue};\n  position: absolute;\n  cursor: pointer;\n  top: 156px;\n  right: ${props => props.position || '15px'};\n  @media screen and (${props => props.theme.media.md}) {\n    top: 172px;\n  }\n`;\n\n\n\nexport const EmailMessage = styled.div`\n  position: absolute;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 16px;\n  color: ${props => props.theme.colors.red};\n  top: 50px;\n  left: 16px;\n`;\n\nexport const PasswordMessage = styled.div`\n  position: absolute;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 1.33;\n  color: ${props => props.theme.colors.red};\n  top: 123px;\n  left: 16px;\n  @media screen and (${props => props.theme.media.md}) {\n    top: 130px;\n    left: 16px;\n  }\n`;\n\nexport const ConfirmMessage = styled.div`\n  position: absolute;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 1.33;\n  color: ${props => props.theme.colors.red};\n  top: 195px;\n  left: 16px;\n  @media screen and (${props => props.theme.media.md}) {\n    top: 210px;\n  }\n`;\n\nexport const SuccessMessagePass = styled.div`\n  position: absolute;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 1.33;\n  color: ${props => props.theme.colors.green};\n  top: 123px;\n  left: 16px;\n  @media screen and (${props => props.theme.media.md}) {\n    top: 130px;\n    left: 16px;\n  }\n`;\n\nexport const SuccessMessageConfirm = styled.div`\n  position: absolute;\n  font-family: ${props => props.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 1.33;\n  color: ${props => props.theme.colors.green};\n  top: 195px;\n  left: 16px;\n  @media screen and (${props => props.theme.media.md}) {\n    top: 210px;\n  }\n`;","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/authService';\nimport { Formik, ErrorMessage } from 'formik';\nimport { string, object, ref } from 'yup';\nimport { iconClose, iconOpen, IconCrossSmall, IconCheck } from './Icons/Icons';\nimport {\n  Wrapper,\n  RegisterFormStyled,\n  IconMail,\n  IconPass,\n  IconConfirm,\n  EmailMessage,\n  PasswordMessage,\n  ConfirmMessage,\n  SuccessMessagePass,\n  SuccessMessageConfirm,\n  Input,\n  Title,\n  Box,\n  Button,\n  Text,\n  Span,\n  Link,\n} from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const [toggleIconPass, setToggleIconPass] = useState(iconClose);\n  const [typePass, setTypePass] = useState('password');\n  const [toggleIconConfirm, setToggleIconConfirm] = useState(iconClose);\n  const [typeCofirm, setTypeCofirm] = useState('password');\n\n  const dispatch = useDispatch();\n\n  const yupRegisterValidation = object().shape({\n    email: string().email('Enter a Valid Email').required('Email is Required'),\n    password: string()\n      .required('Enter Your Password')\n      .min(6, 'Password should be minimum 6 character')\n      .max(16, 'Too long')\n      .matches(\n        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,16}$/,\n        'Password must contain at least one uppercase letter, one lowercase letter, one digit, and be 6-16 characters long'\n      ),\n    confirm: string()\n      .oneOf([ref('password')], 'Password does not matched')\n      .required('Confirm Password is Required'),\n  });\n\n  const initialValues = {\n    email: '',\n    password: '',\n    confirm: '',\n  };\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(register({ email, password }));\n    resetForm();\n  };\n\n  const togglePassInput = e => {\n    if (typePass === 'password') {\n      setTypePass('text');\n      setToggleIconPass(iconOpen);\n    } else {\n      setTypePass('password');\n      setToggleIconPass(iconClose);\n    }\n  };\n\n  const toggleConfirmInput = e => {\n    if (typeCofirm === 'password') {\n      setTypeCofirm('text');\n      setToggleIconConfirm(iconOpen);\n    } else {\n      setTypeCofirm('password');\n      setToggleIconConfirm(iconClose);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={yupRegisterValidation}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => (\n          <RegisterFormStyled autoComplete=\"off\">\n            <Title>Registation</Title>\n            <Box>\n              <Input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Email\"\n                valid={touched.email && !errors.email ? 'true' : undefined}\n                error={touched.email && errors.email}\n              />\n              <ErrorMessage\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                render={msg => <EmailMessage>{msg}</EmailMessage>}\n              />\n              {errors.email && touched.email && (\n                <IconMail error={errors.email && touched.email && 'false'}>\n                  <IconCrossSmall />\n                </IconMail>\n              )}\n              {touched.email && !errors.email && (\n                <IconMail error={errors.email && touched.email && 'false'}>\n                  <IconCheck />\n                </IconMail>\n              )}\n              <Input\n                type={typePass}\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                valid={\n                  touched.password && !errors.password ? 'true' : undefined\n                }\n                error={touched.password && errors.password}\n              />\n              {touched.password && errors.password && (\n                <ErrorMessage\n                  name=\"password\"\n                  type=\"password\"\n                  render={password => (\n                    <PasswordMessage>{password}</PasswordMessage>\n                  )}\n                />\n              )}\n              {touched.password && !errors.password && (\n                <SuccessMessagePass>Password is secure</SuccessMessagePass>\n              )}\n              {touched.password && !errors.password && (\n                <IconPass position={'40px'}\n                  error={errors.password && touched.password && 'false'}\n                >\n                  <IconCheck />\n                </IconPass>\n              )}\n              <IconPass  onClick={togglePassInput}>\n                {toggleIconPass}\n              </IconPass>\n\n              <Input\n                type={typeCofirm}\n                name=\"confirm\"\n                id=\"confirm\"\n                placeholder=\"Confirm password\"\n                valid={touched.confirm && !errors.confirm ? 'true' : undefined}\n                error={touched.confirm && errors.confirm}\n              />\n              {touched.confirm && !errors.confirm &&\n                <IconConfirm position={'40px'}\n                  error={errors.confirm && touched.confirm && 'false'}\n                >\n                  <IconCheck />\n                </IconConfirm>\n             }\n              <IconConfirm onClick={toggleConfirmInput}>\n                  {toggleIconConfirm}\n                </IconConfirm>\n\n              {touched.confirm && errors.confirm && (\n                <ErrorMessage\n                  name=\"confirm\"\n                  type=\"confirm\"\n                  render={msg => <ConfirmMessage>{msg}</ConfirmMessage>}\n                />\n              )}\n              {touched.confirm && !errors.confirm && (\n                <SuccessMessageConfirm>\n                  Passwords is matched\n                </SuccessMessageConfirm>\n              )}\n            </Box>\n            <Button type=\"submit\">Registation</Button>\n            <Text>\n              Already have an account?\n              <Span>\n                <Link to=\"/login\">Login</Link>\n              </Span>\n            </Text>\n          </RegisterFormStyled>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n","import {RegisterForm} from '../components/RegisterForm/RegisterForm'\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <RegisterForm/>\n    </>\n  );\n};\nexport default RegisterPage;\n"],"names":["SVG","styled","_templateObject","_taggedTemplateLiteral","iconClose","_jsx","width","height","children","href","icons","iconOpen","IconCrossSmall","IconCheck","color","Wrapper","props","theme","shadows","mainShadow","colors","clearWhite","media","md","RegisterFormStyled","Form","_templateObject2","Box","_templateObject3","lg","Title","_templateObject4","fonts","main","fontWeights","medium","fontSizes","dark","Input","Field","_templateObject5","regular","error","red","valid","green","blue","Button","_templateObject6","Text","_templateObject7","grey","Span","_templateObject8","Link","NavLink","_templateObject9","IconMail","_templateObject10","IconPass","_templateObject11","position","IconConfirm","_templateObject12","EmailMessage","_templateObject13","PasswordMessage","_templateObject14","ConfirmMessage","_templateObject15","SuccessMessagePass","_templateObject16","SuccessMessageConfirm","_templateObject17","RegisterForm","_useState","useState","_useState2","_slicedToArray","toggleIconPass","setToggleIconPass","_useState3","_useState4","typePass","setTypePass","_useState5","_useState6","toggleIconConfirm","setToggleIconConfirm","_useState7","_useState8","typeCofirm","setTypeCofirm","dispatch","useDispatch","yupRegisterValidation","object","shape","email","string","required","password","min","max","matches","confirm","oneOf","ref","togglePassInput","e","toggleConfirmInput","Formik","initialValues","validationSchema","onSubmit","_ref","_ref2","resetForm","register","_ref3","errors","touched","_jsxs","autoComplete","type","name","placeholder","undefined","ErrorMessage","id","render","msg","onClick","to","_Fragment"],"sourceRoot":""}