{"version":3,"file":"static/js/40.e0de4bea.chunk.js","mappings":"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","sources":["components/AddPetForm/RadioBtn/RadioBtn.styled.jsx","components/AddPetForm/RadioBtn/RadioBtn.jsx","components/AddPetForm/InputField/InputField.styled.jsx","components/AddPetForm/InputField/InputField.jsx","components/AddPetForm/Title/Title.styled.jsx","components/AddPetForm/Title/Title.jsx","components/AddPetForm/StageIndicator/StageIndicator.styled.jsx","components/AddPetForm/StageIndicator/StageIndicator.jsx","components/AddPetForm/AddPetForm.styled.jsx","components/AddPetForm/AddPetForm.jsx","pages/AddPetPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const InputLabel = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 19px;\n  padding: ${props => {\n    if (props.name === 'category') {\n      return '8px 16px';\n    }\n  }};\n\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 19px;\n  letter-spacing: 0.04em;\n\n  color: ${props => {\n    if (props.name === 'category') {\n      return props.selected ? '#FEF9F9' : '#54adff';\n    } else {\n      return props.selected ? '#00C3AD' : '#888888';\n    }\n  }};\n  background: ${props => {\n    if (props.name === 'category') {\n      return props.selected ? '#54adff' : '#cce4fb';\n    }\n  }};\n  /* fill: red; */\n  border-radius: 40px;\n  cursor: pointer;\n`;\n\nexport const RadioInput = styled(Field)`\n  display: none;\n`;\n","import { RadioInput, InputLabel } from './RadioBtn.styled';\n\nexport const RadioBtn = ({ value, picked, name, children }) => {\n  const selected = value === picked;\n  return (\n    <InputLabel selected={selected} name={name}>\n      {children}\n      {value}\n      <RadioInput type=\"radio\" name={name} value={value} />\n    </InputLabel>\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const InputLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 19px;\n`;\n\nexport const Input = styled(Field)`\n  padding: 8px 16px;\n  width: 264px;\n  height: 40px;\n  margin-top: 4px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 150%;\n\n  font-size: 16px;\n\n  border: 1px solid #54adff;\n  border-radius: 40px;\n\n  outline: transparent;\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 150%;\n  }\n`;\n\nexport const ErrWrapper = styled.span`\n  position: absolute;\n  bottom: -20px;\n  font-size: 12px;\n  line-height: 16px;\n  color: red;\n`;\n","import { ErrorMessage } from 'formik';\nimport { InputLabel, Input, ErrWrapper } from './InputField.styled';\n\nexport const InputField = ({ type, name, label, placeholder }) => {\n  return (\n    <InputLabel>\n      {label}\n      <Input type={type} name={name} placeholder={placeholder} />\n      <ErrWrapper>\n        <ErrorMessage name={name} />\n      </ErrWrapper>\n    </InputLabel>\n  );\n};\n","import styled from 'styled-components';\n\nexport const AddPetTitle = styled.h2`\n  font-family: 'Manrope';\n  font-style: normal;\n  font-size: 20px;\n  line-height: 27px;\n  color: #111111;\n  padding-left: 16px;\n  margin-bottom: 24px;\n`;\n","import { AddPetTitle } from './Title.styled';\n\nexport const Title = ({ reason, stage }) => {\n  let title = 'Add pet';\n  if (stage !== 1) {\n    switch (reason) {\n      case 'sell':\n        title = 'Add pet for sale';\n        break;\n      case 'lost/found':\n        title = 'Add lost pet';\n        break;\n      default:\n        title = 'Add pet';\n    }\n  }\n  return <AddPetTitle>{title}</AddPetTitle>;\n};\n","import styled from 'styled-components';\n\nexport const Stage = styled.span`\n  font-size: 10px;\n  line-height: 14px;\n  color: ${props => {\n    if (props.stage < props.datastage) {\n      return props.theme.colors.grey;\n    } else if (props.stage === props.datastage) {\n      return props.theme.colors.blue;\n    } else {\n      return props.theme.colors.green;\n    }\n  }};\n`;\n\nexport const Indicator = styled.span`\n  width: 80px;\n  height: 8px;\n  background: ${props => {\n    if (props.stage < props.datastage) {\n      return props.theme.colors.blueLight;\n    } else if (props.stage === props.datastage) {\n      return props.theme.colors.blue;\n    } else {\n      return props.theme.colors.green;\n    }\n  }};\n  border-radius: 8px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-bottom: 24px;\n`;\n\nexport const StageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n","import {\n  Stage,\n  StageWrapper,\n  Indicator,\n  Wrapper,\n} from './StageIndicator.styled';\n\nexport const StageIndicator = ({ stage }) => {\n  return (\n    <Wrapper>\n      <StageWrapper>\n        <Stage stage={stage} datastage={1}>\n          Choose option\n        </Stage>\n        <Indicator stage={stage} datastage={1}></Indicator>\n      </StageWrapper>\n      <StageWrapper>\n        <Stage stage={stage} datastage={2}>\n          Personal details\n        </Stage>\n        <Indicator stage={stage} datastage={2}></Indicator>\n      </StageWrapper>\n      <StageWrapper>\n        <Stage stage={stage} datastage={3}>\n          More info\n        </Stage>\n        <Indicator stage={stage} datastage={3}></Indicator>\n      </StageWrapper>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const ExtraWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 20px;\n  font-family: 'Manrope';\n  font-style: normal;\n`;\n\nexport const SexWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 23px;\n`;\n\nexport const GroupTitle = styled.p`\n  font-size: 14px;\n  line-height: 19px;\n`;\n\nexport const Wrapper = styled.div`\n  display: inline-block;\n  padding: 20px 8px 16px;\n  background: #ffffff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n`;\n\nexport const GroupWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  align-self: flex-start;\n  gap: 12px;\n`;\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  align-self: flex-start;\n  gap: 24px;\n`;\n\nexport const LoginFormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const CommentsLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 19px;\n`;\n\nexport const CommentText = styled(Field)`\n  width: 264px;\n  height: 92px;\n  padding: 8px 16px;\n  margin-top: 4px;\n  outline: transparent;\n  border: 1px solid #54adff;\n  border-radius: 20px;\n  resize: none;\n\n  &::placeholder {\n    font-size: 14px;\n    color: #7a7a7a;\n  }\n`;\n\nexport const ErrWrapper = styled.span`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  width: 100px;\n  height: 40px;\n\n  border-radius: 5px;\n\n  color: #ff7b3e;\n  background-color: #4e4039;\n  border: 2px solid #ff7b3e;\n  box-shadow: 1px 1px 3px #c9c1c1;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #ff7b3e;\n    color: #ffffff;\n  }\n\n  &:disabled {\n    /* color: #bdbdbd; */\n    background-color: #4e4039;\n    border: 2px solid #bdbdbd;\n    cursor: auto;\n  }\n`;\n","import { useState } from 'react';\nimport { RadioBtn } from './RadioBtn/RadioBtn';\nimport { InputField } from './InputField/InputField';\nimport { Title } from './Title/Title';\nimport { StageIndicator } from './StageIndicator/StageIndicator';\n// import { SexIcon } from './SexIcon/SexIcon';\n\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  LoginFormStyled,\n  Button,\n  Wrapper,\n  InputWrapper,\n  GroupWrapper,\n  ExtraWrapper,\n  CommentText,\n  CommentsLabel,\n  SexWrapper,\n  GroupTitle,\n} from './AddPetForm.styled';\n\nconst formTempValues = localStorage.getItem('formValues');\nconst initialsValues = {\n  title: '',\n  birth: '',\n  breed: '',\n  name: '',\n  location: '',\n  price: '',\n  comments: '',\n  sex: '',\n  category: 'your pet',\n  file: '',\n};\n\nconst initialsFormState = formTempValues\n  ? JSON.parse(formTempValues)\n  : initialsValues;\n\nconst FormSchema = yup.object().shape({\n  title: yup.string().min(2).max(16).required(),\n  birth: yup.string().matches(/^\\d{2}\\.\\d{2}\\.\\d{4}$/),\n  breed: yup.string().min(2).max(16).required(),\n  name: yup.string().min(2).max(16).required(),\n  location: yup.string().when('category', {\n    is: value =>\n      value === 'sell' || value === 'lost/found' || value === 'in good hands',\n    then: yup\n      .string()\n      .matches(/^[A-Z][a-zA-Z]*$/)\n      .required(),\n    otherwise: yup.string(),\n  }),\n  price: yup.number().when('category', {\n    is: value => value === 'sell',\n    then: yup.number().moreThan(0).required(),\n    otherwise: yup.number(),\n  }),\n  comments: yup.string().min(8).max(120),\n  sex: yup.string().when('category', {\n    is: value =>\n      value === 'sell' || value === 'lost/found' || value === 'in good hands',\n    then: yup.string().oneOf(['Female', 'Male']).required(),\n    otherwise: yup.string(),\n  }),\n  category: yup\n    .string()\n    .oneOf(['your pet', 'sell', 'lost/found', 'in good hands'])\n    .required(),\n  file: '',\n});\n\nconst statuses = ['your pet', 'sell', 'lost/found', 'in good hands'];\nconst sexes = ['Female', 'Male'];\n\nexport const AddPetForm = () => {\n  const [stage, SetStage] = useState(1);\n\n  const handleSubmitForm = async () => {\n    SetStage(2);\n  };\n\n  return (\n    <ExtraWrapper>\n      <Formik\n        initialValues={initialsFormState}\n        onSubmit={handleSubmitForm}\n        validationSchema={FormSchema}\n      >\n        {({ values }) => {\n          const { category, sex } = values;\n          return (\n            <Wrapper>\n              <Title picked={category} stage={stage} />\n              <StageIndicator stage={stage} />\n              <LoginFormStyled>\n                {stage === 1 && (\n                  <GroupWrapper role=\"group\">\n                    {statuses.map(status => {\n                      return (\n                        <RadioBtn\n                          key={status}\n                          value={status}\n                          name=\"category\"\n                          picked={category}\n                        />\n                      );\n                    })}\n                  </GroupWrapper>\n                )}\n                <GroupWrapper role=\"group\" aria-labelledby=\"sex\">\n                  <GroupTitle id=\"sex\">The sex</GroupTitle>\n                  <SexWrapper>\n                    {sexes.map(option => {\n                      return (\n                        <RadioBtn\n                          key={option}\n                          value={option}\n                          name=\"sex\"\n                          picked={sex}\n                        />\n                      );\n                    })}\n                  </SexWrapper>\n                </GroupWrapper>\n                <InputWrapper>\n                  <InputField\n                    type=\"text\"\n                    name=\"title\"\n                    label={'Title of add'}\n                    placeholder={'Title of add'}\n                  />\n                  <InputField\n                    type=\"text\"\n                    name=\"name\"\n                    label={\"Pet's name\"}\n                    placeholder={\"Type your pet's name \"}\n                  />\n                  <InputField\n                    type=\"text\"\n                    name=\"birth\"\n                    label={'Date of birth'}\n                    placeholder={'Type date of birth'}\n                  />\n                  <InputField\n                    type=\"text\"\n                    name=\"breed\"\n                    label={'Breed'}\n                    placeholder={'Type breed'}\n                  />\n                  <InputField\n                    type=\"text\"\n                    name=\"location\"\n                    label={'Location'}\n                    placeholder={'Type your location'}\n                  />\n                  <InputField\n                    type=\"number\"\n                    name=\"price\"\n                    label={'Price'}\n                    placeholder={'Type price'}\n                  />\n                </InputWrapper>\n\n                <CommentsLabel>\n                  Comments\n                  <CommentText\n                    as=\"textarea\"\n                    name=\"comments\"\n                    placeholder=\"Type your comments here...\"\n                  />\n                </CommentsLabel>\n                <Button\n                  type=\"submit\"\n                  // disabled={\n                  //   (props.values.email !== '') & (props.values.password !== '')\n                  //     ? false\n                  //     : true\n                  // }\n                >\n                  Done\n                </Button>\n              </LoginFormStyled>\n            </Wrapper>\n          );\n        }}\n      </Formik>\n    </ExtraWrapper>\n  );\n};\n\n\n\n\n// const formTempValues = localStorage.getItem('formValues');\n// const initialsValues = {\n//   title: '',\n//   birth: '',\n//   breed: '',\n//   name: '',\n//   location: '',\n//   price: '',\n//   comments: '',\n// };\n\n// const initialsFormState = formTempValues\n//   ? JSON.parse(formTempValues)\n//   : initialsValues;\n\n// const FormSchema = yup.object().shape({\n//   title: '',\n//   birth: '',\n//   breed: yup.string().min(2).max(16).required(),\n//   name: yup.string().min(2).max(16).required(),\n//   location: '',\n//   price: yup.string().when('field1', {\n//     is: value => value && value.length > 0,\n//     then: yup.string().required('Field 2 is required'),\n//     otherwise: yup.string(),\n//   }),\n//   comments: '',\n// });\n\n// const statuses = ['your pet', 'sell', 'lost/found', 'in good hands'];\n\n// export const AddPetForm = () => {\n//   const [reason, SetReason] = useState('your pet');\n//   const [selectedSex, SetSelectedSex] = useState(null);\n//   const [stage, SetStage] = useState(1);\n//   const [formValues, SetFormValues] = useState(() => initialsFormState);\n\n//   const handleRadioBtn = e => {\n//     if (e.target.name === 'reason') {\n//       SetReason(e.target.value);\n//     } else if (e.target.name === 'selectedSex') {\n//       SetSelectedSex(e.target.value);\n//     }\n//   };\n\n//   const handleInputOnChange = e => {\n//     const { name, value } = e.target;\n//     SetFormValues({ ...formValues, [name]: value });\n\n//     localStorage.setItem('formValues', JSON.stringify(formValues));\n//   };\n\n//   const handleSubmitForm = async () => {\n//     console.log(formValues);\n//   };\n\n//   return (\n//     <ExtraWrapper>\n//       <Wrapper>\n//         <Title reason={reason} stage={stage} />\n//         <StageIndicator stage={stage} />\n//         <Formik\n//           onSubmit={handleSubmitForm}\n//           // validationSchema={FormSchema}\n//         >\n//           {props => {\n//             return (\n//               <LoginFormStyled>\n//                 {stage === 1 && (\n//                   <GroupWrapper role=\"group\">\n//                     {statuses.map(status => (\n//                       <RadioBtn\n//                         key={status}\n//                         label={status}\n//                         onChange={handleRadioBtn}\n//                         choice={reason}\n//                         appointment=\"reason\"\n//                       />\n//                     ))}\n//                   </GroupWrapper>\n//                 )}\n//                 <GroupWrapper role=\"group\" aria-labelledby=\"sex\">\n//                   <GroupTitle id=\"sex\">The sex</GroupTitle>\n//                   <SexWrapper>\n//                     <RadioBtn\n//                       label=\"Female\"\n//                       onChange={handleRadioBtn}\n//                       choice={selectedSex}\n//                       appointment=\"selectedSex\"\n//                     >\n//                       <SexIcon iconName=\"#icon-pawprint\" />\n//                     </RadioBtn>\n//                     <RadioBtn\n//                       label=\"Male\"\n//                       onChange={handleRadioBtn}\n//                       choice={selectedSex}\n//                       appointment=\"selectedSex\"\n//                     >\n//                       <SexIcon iconName=\"#icon-pawprint\" />\n//                     </RadioBtn>\n//                   </SexWrapper>\n//                 </GroupWrapper>\n//                 <InputField\n//                   type=\"text\"\n//                   name=\"title\"\n//                   label={'Title of add'}\n//                   placeholder={'Title of add'}\n//                   value={formValues.title}\n//                   onChange={handleInputOnChange}\n//                 />\n//                 <InputField\n//                   type=\"text\"\n//                   name=\"name\"\n//                   label={\"Pet's name\"}\n//                   placeholder={\"Type your pet's name \"}\n//                   value={formValues.name}\n//                   onChange={handleInputOnChange}\n//                 />\n//                 <InputField\n//                   type=\"text\"\n//                   name=\"birth\"\n//                   label={'Date of birth'}\n//                   placeholder={'Type date of birth'}\n//                   value={formValues.birth}\n//                   onChange={handleInputOnChange}\n//                 />\n//                 <InputField\n//                   type=\"text\"\n//                   name=\"breed\"\n//                   label={'Breed'}\n//                   placeholder={'Type breed'}\n//                   value={formValues.breed}\n//                   onChange={handleInputOnChange}\n//                 />\n//                 <InputField\n//                   type=\"text\"\n//                   name=\"location\"\n//                   label={'Location'}\n//                   placeholder={'Type your location'}\n//                   value={formValues.location}\n//                   onChange={handleInputOnChange}\n//                 />\n//                 <InputField\n//                   type=\"number\"\n//                   name=\"price\"\n//                   label={'Price'}\n//                   placeholder={'Type price'}\n//                   value={formValues.price}\n//                   onChange={handleInputOnChange}\n//                 />\n//                 <CommentsLabel>\n//                   Comments\n//                   <CommentText\n//                     as=\"textarea\"\n//                     name=\"comments\"\n//                     placeholder=\"Type your comments here...\"\n//                     value={formValues.comments}\n//                     onChange={e => handleInputOnChange(e)}\n//                   />\n//                 </CommentsLabel>\n//                 <Button\n//                   type=\"submit\"\n//                   // disabled={\n//                   //   (props.values.email !== '') & (props.values.password !== '')\n//                   //     ? false\n//                   //     : true\n//                   // }\n//                 >\n//                   Done\n//                 </Button>\n//               </LoginFormStyled>\n//             );\n//           }}\n//         </Formik>\n//       </Wrapper>\n//     </ExtraWrapper>\n//   );\n// };\n","import { AddPetForm } from '../components/AddPetForm/AddPetForm';\n\nexport const AddPetPage = () => {\n  return <AddPetForm />;\n};\n"],"names":["InputLabel","styled","_templateObject","_taggedTemplateLiteral","props","name","selected","RadioInput","Field","_templateObject2","RadioBtn","_ref","value","picked","children","_jsxs","_jsx","type","Input","ErrWrapper","_templateObject3","InputField","label","placeholder","ErrorMessage","AddPetTitle","Title","reason","title","stage","Stage","datastage","theme","colors","grey","blue","green","Indicator","blueLight","Wrapper","StageWrapper","_templateObject4","StageIndicator","ExtraWrapper","SexWrapper","GroupTitle","GroupWrapper","_templateObject5","InputWrapper","_templateObject6","LoginFormStyled","Form","_templateObject7","CommentsLabel","_templateObject8","CommentText","_templateObject9","Button","_templateObject10","_templateObject11","formTempValues","localStorage","getItem","initialsFormState","JSON","parse","birth","breed","location","price","comments","sex","category","file","FormSchema","yup","shape","min","max","required","matches","when","is","then","otherwise","moreThan","oneOf","statuses","sexes","AddPetForm","_useState","useState","_useState2","_slicedToArray","SetStage","handleSubmitForm","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","stop","apply","arguments","Formik","initialValues","onSubmit","validationSchema","_ref2","values","role","map","status","id","option","as","AddPetPage"],"sourceRoot":""}